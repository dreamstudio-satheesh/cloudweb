services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - laravel
      - fastapi
    networks:
      - cloud_network
    restart: unless-stopped

  laravel:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    container_name: laravel
    ports:
      - "8001:80"  # Expose Laravel directly
    volumes:
      - ./laravel:/var/www/html
      - ./shared:/var/www/shared
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - WORKOS_CLIENT_ID=${WORKOS_CLIENT_ID}
      - WORKOS_API_KEY=${WORKOS_API_KEY}
      - WORKOS_WEBHOOK_SECRET=${WORKOS_WEBHOOK_SECRET}
      - FASTAPI_URL=http://fastapi:8000
    depends_on:
      - mysql
      - redis
    networks:
      - cloud_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php", "artisan", "tinker", "--execute", "1"]
      interval: 30s
      timeout: 10s
      retries: 3

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: fastapi
    ports:
      - "8000:8000"  # Expose FastAPI directly
    volumes:
      - ./fastapi:/app
      - ./shared:/app/shared
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      - REDIS_URL=redis://default:${REDIS_PASSWORD}@redis:6379
      - HETZNER_API_TOKEN=${HETZNER_API_TOKEN}
      - INTERNAL_API_KEY=${INTERNAL_API_KEY}
    depends_on:
      - mysql
      - redis
    networks:
      - cloud_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
    ports:
      - "3306:3306"
    networks:
      - cloud_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_PASSWORD}
      - UPLOAD_LIMIT=100M
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - cloud_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - cloud_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  redis_data:

networks:
  cloud_network:
    driver: bridge